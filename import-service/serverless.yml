service: import-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev2
  region: eu-west-1

  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:*
      - sqs:*
      - sns:*
    Resource: "*"
  - Effect: Allow
    Action:
      - s3:PutObject
      - s3:ListBucket
      - s3:GetObject
      - s3:DeleteObject
      - s3:CopyObject
    Resource: 
      - arn:aws:s3:::flowers-shop-upload/*
      - arn:aws:s3:::flowers-shop-upload/parsed/*
      - arn:aws:s3:::flowers-shop-upload/uploaded/*

functions:
  importProductsFile:
    handler: handlers/importProductsFile.handler
    events:
      - http:
          path: /import
          method: get
          cors: true
          authorizer:
            arn: arn:aws:lambda:eu-west-1:416847255302:function:authorization-service-dev-basicAuthorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
          request:
            parameters:
              querystrings:
                name: true
                
  importFileParser:
    handler: handlers/importFileParser.handler
    events:
      - s3:
            bucket: ${self:custom.uploadBucket}
            event: s3:ObjectCreated:*
            rules:
              - prefix: uploaded/
    environment:
      PRODUCTS_TABLE: ${self:custom.productsTable}
      SQS_QUEUE_URL:  "arn:aws:sqs:eu-west-1:416847255302:catalogItemsQueue"
      REGION: ${self:provider.region}
custom:
  productsTable: "products"
  stocksTable: "stocks"
  uploadBucket: "flowers-shop-upload"